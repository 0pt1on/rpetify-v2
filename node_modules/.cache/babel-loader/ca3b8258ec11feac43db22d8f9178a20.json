{"ast":null,"code":"var _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/workout-card/SetRow.js\";\nimport React from \"react\";\nimport { removeWorkout, removeSet, changeSet } from \"features/workouts/slice\";\nimport Select from \"components/Select\";\nimport { Grid } from \"@chakra-ui/core\";\nimport { useDispatch } from \"react-redux\";\nexport default function SetRow(props) {\n  var reps = props.reps,\n      rpe = props.rpe,\n      sets = props.sets,\n      setId = props.id,\n      setIdx = props.setIdx,\n      arr = props.arr,\n      workoutId = props.workoutId,\n      liftName = props.liftName;\n  var dispatch = useDispatch();\n\n  function handleWorksetChange(_ref) {\n    var e = _ref.e,\n        workoutId = _ref.workoutId,\n        setId = _ref.setId;\n    e.persist();\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    dispatch(changeSet({\n      workoutId: workoutId,\n      setId: setId,\n      name: name,\n      value: value\n    }));\n  }\n\n  return React.createElement(Grid, {\n    key: setId,\n    my: \"2\",\n    gridGap: \"2\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Select, {\n    name: \"reps\",\n    onChange: function onChange(e) {\n      return handleWorksetChange({\n        e: e,\n        workoutId: workoutId,\n        setId: setId\n      });\n    },\n    defaultValue: reps,\n    useReps: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Select, {\n    name: \"rpe\",\n    onChange: function onChange(e) {\n      return handleWorksetChange({\n        e: e,\n        workoutId: workoutId,\n        setId: setId\n      });\n    },\n    defaultValue: rpe,\n    useRpe: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Select, {\n    name: \"sets\",\n    defaultValue: sets,\n    useSets: true,\n    onChange: function onChange(e) {\n      if (e.target.value === \"-\") {\n        if (setIdx === 0 && arr.length === 1) {\n          dispatch(removeWorkout({\n            id: workoutId\n          }));\n        } else {\n          dispatch(removeSet({\n            workoutId: workoutId,\n            setIdx: setIdx\n          }));\n        }\n      } else {\n        handleWorksetChange({\n          e: e,\n          workoutId: workoutId,\n          setId: setId\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/workout-card/SetRow.js"],"names":["React","removeWorkout","removeSet","changeSet","Select","Grid","useDispatch","SetRow","props","reps","rpe","sets","setId","id","setIdx","arr","workoutId","liftName","dispatch","handleWorksetChange","e","persist","target","name","value","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { removeWorkout, removeSet, changeSet } from \"features/workouts/slice\";\nimport Select from \"components/Select\";\nimport { Grid } from \"@chakra-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function SetRow(props) {\n  const {\n    reps,\n    rpe,\n    sets,\n    id: setId,\n    setIdx,\n    arr,\n    workoutId,\n    liftName\n  } = props;\n\n  const dispatch = useDispatch();\n\n  function handleWorksetChange({ e, workoutId, setId }) {\n    e.persist();\n    const { name, value } = e.target;\n    dispatch(changeSet({ workoutId, setId, name, value }));\n  }\n\n  return (\n    <Grid key={setId} my=\"2\" gridGap=\"2\" gridTemplateColumns=\"1fr 1fr 1fr\">\n      <Select\n        name=\"reps\"\n        onChange={e => handleWorksetChange({ e, workoutId, setId })}\n        defaultValue={reps}\n        useReps\n      />\n      <Select\n        name=\"rpe\"\n        onChange={e => handleWorksetChange({ e, workoutId, setId })}\n        defaultValue={rpe}\n        useRpe\n      />\n      <Select\n        name=\"sets\"\n        defaultValue={sets}\n        useSets\n        onChange={e => {\n          if (e.target.value === \"-\") {\n            if (setIdx === 0 && arr.length === 1) {\n              dispatch(removeWorkout({ id: workoutId }));\n            } else {\n              dispatch(removeSet({ workoutId, setIdx }));\n            }\n          } else {\n            handleWorksetChange({ e, workoutId, setId });\n          }\n        }}\n      />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}