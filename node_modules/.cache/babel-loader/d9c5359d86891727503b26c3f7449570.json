{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport ControlBox from \"../ControlBox\";\nimport Flex from \"../Flex\";\nimport Icon from \"../Icon\";\nimport VisuallyHidden from \"../VisuallyHidden\";\nimport checkboxStyles from \"./styles\";\nvar Checkbox = forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      value = _ref.value,\n      ariaLabel = _ref[\"aria-label\"],\n      ariaLabelledBy = _ref[\"aria-labelledby\"],\n      color = _ref.color,\n      defaultIsChecked = _ref.defaultIsChecked,\n      isChecked = _ref.isChecked,\n      isFullWidth = _ref.isFullWidth,\n      size = _ref.size,\n      isDisabled = _ref.isDisabled,\n      isInvalid = _ref.isInvalid,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      isIndeterminate = _ref.isIndeterminate,\n      children = _ref.children,\n      iconColor = _ref.iconColor,\n      iconSize = _ref.iconSize,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"id\", \"name\", \"value\", \"aria-label\", \"aria-labelledby\", \"color\", \"defaultIsChecked\", \"isChecked\", \"isFullWidth\", \"size\", \"isDisabled\", \"isInvalid\", \"onChange\", \"onBlur\", \"onFocus\", \"isIndeterminate\", \"children\", \"iconColor\", \"iconSize\"]);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var styleProps = checkboxStyles({\n    color: color,\n    size: size,\n    colorMode: colorMode\n  });\n  return jsx(Flex, _extends({\n    as: \"label\",\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    width: isFullWidth ? \"full\" : undefined,\n    cursor: isDisabled ? \"not-allowed\" : \"pointer\"\n  }, rest), jsx(VisuallyHidden, {\n    as: \"input\",\n    type: \"checkbox\",\n    \"aria-label\": ariaLabel,\n    id: id,\n    ref: ref,\n    name: name,\n    value: value,\n    defaultChecked: defaultIsChecked,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    checked: isChecked,\n    disabled: isDisabled,\n    \"aria-invalid\": isInvalid,\n    \"data-indeterminate\": isIndeterminate\n  }), jsx(ControlBox, styleProps, jsx(Icon, {\n    name: isIndeterminate ? \"minus\" : \"check\",\n    size: iconSize,\n    color: iconColor\n  })), children && jsx(Box, {\n    ml: 2,\n    fontSize: size,\n    userSelect: \"none\",\n    opacity: isDisabled ? 0.32 : 1\n  }, children));\n});\nCheckbox.defaultProps = {\n  size: \"md\",\n  color: \"blue\",\n  iconSize: \"10px\"\n};\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}