{"ast":null,"code":"import _slicedToArray from \"/Users/karolis/imkarolis/rpetify-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/NewVariant.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { addVariant, setActiveFalse } from \"features/variants/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"components/Select\";\nimport { Text, Flex, Grid, Input, Icon } from \"@chakra-ui/core\";\nexport default function NewVariant() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"SQ\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      main = _useState4[0],\n      setMain = _useState4[1];\n\n  var _useState5 = useState(80),\n      _useState6 = _slicedToArray(_useState5, 2),\n      percent = _useState6[0],\n      setPercent = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newOneRM = _useState8[0],\n      setNewOneRM = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fieldsValid = _useState10[0],\n      setValid = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isNameValid = _useState12[0],\n      setNameValid = _useState12[1];\n\n  var oneRepMax = useSelector(function (state) {\n    return state.oneRepMax;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.variants;\n  }),\n      variants = _useSelector.variants;\n\n  var units = useSelector(function (state) {\n    return state.units;\n  });\n\n  function handleAddVariant() {\n    dispatch(addVariant({\n      name: name,\n      main: main,\n      percent: percent,\n      oneRM: newOneRM\n    }));\n    setName(\"\");\n    setMain(\"\");\n    setPercent(\"\");\n    setNewOneRM(\"\");\n    dispatch(setActiveFalse());\n    setValid(false);\n  }\n\n  useEffect(function () {\n    if (fieldsValid) {\n      var mainOneRM = oneRepMax.find(function (_ref) {\n        var shortName = _ref.shortName;\n        return shortName === main;\n      }).oneRM;\n      var weight = Math.round(mainOneRM * (percent / 100));\n      setNewOneRM(weight);\n    }\n  }, [oneRepMax, main, percent, fieldsValid]);\n  useEffect(function () {\n    var nameExist = !!variants.find(function (v) {\n      return v.name.toLowerCase() === name.toLowerCase();\n    });\n    setNameValid(!nameExist);\n\n    if (name && main && percent && !nameExist && main !== \"-\" && !!percent) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [name, main, percent, variants]);\n  var liftNamesArray = oneRepMax.map(function (_ref2) {\n    var shortName = _ref2.shortName;\n    return {\n      value: shortName,\n      text: shortName\n    };\n  });\n  var oneRMByUnit = units === \"lbs\" ? newOneRM : Math.round(newOneRM * 0.453592);\n  return React.createElement(Grid, {\n    my: \"2\",\n    gridGap: \"2\",\n    gridTemplateColumns: \"1.25fr 1fr 1fr 0.8fr 0.5fr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Input, {\n    color: \"gray.800\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    focusBorderColor: isNameValid ? \"yellow\" : \"red\",\n    _hover: {\n      borderColor: isNameValid ? \"black\" : \"red.300\"\n    },\n    borderColor: isNameValid ? \"black\" : \"red.300\",\n    defaultValue: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Select, {\n    defaultValue: main,\n    customArray: liftNamesArray,\n    onChange: function onChange(e) {\n      return setMain(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Select, {\n    defaultValue: percent,\n    usePercentages: true,\n    onChange: function onChange(e) {\n      setPercent(Number(e.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Flex, {\n    flexDir: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, oneRMByUnit || \"-\")), React.createElement(Flex, {\n    flexDir: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, fieldsValid ? React.createElement(Icon, {\n    onClick: handleAddVariant,\n    name: \"check-circle\",\n    size: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(Icon, {\n    name: \"small-close\",\n    size: \"6\",\n    onClick: function onClick() {\n      return dispatch(setActiveFalse());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/NewVariant.js"],"names":["React","useState","useEffect","addVariant","setActiveFalse","useSelector","useDispatch","Select","Text","Flex","Grid","Input","Icon","NewVariant","dispatch","name","setName","main","setMain","percent","setPercent","newOneRM","setNewOneRM","fieldsValid","setValid","isNameValid","setNameValid","oneRepMax","state","variants","units","handleAddVariant","oneRM","mainOneRM","find","shortName","weight","Math","round","nameExist","v","toLowerCase","liftNamesArray","map","value","text","oneRMByUnit","borderColor","e","target","Number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,yBAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,QAA8C,iBAA9C;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADmC,kBAEXL,QAAQ,CAAC,EAAD,CAFG;AAAA;AAAA,MAE5Bc,IAF4B;AAAA,MAEtBC,OAFsB;;AAAA,mBAGXf,QAAQ,CAAC,IAAD,CAHG;AAAA;AAAA,MAG5BgB,IAH4B;AAAA,MAGtBC,OAHsB;;AAAA,mBAILjB,QAAQ,CAAC,EAAD,CAJH;AAAA;AAAA,MAI5BkB,OAJ4B;AAAA,MAInBC,UAJmB;;AAAA,mBAKHnB,QAAQ,CAAC,IAAD,CALL;AAAA;AAAA,MAK5BoB,QAL4B;AAAA,MAKlBC,WALkB;;AAAA,mBAMHrB,QAAQ,CAAC,KAAD,CANL;AAAA;AAAA,MAM5BsB,WAN4B;AAAA,MAMfC,QANe;;AAAA,oBAOCvB,QAAQ,CAAC,IAAD,CAPT;AAAA;AAAA,MAO5BwB,WAP4B;AAAA,MAOfC,YAPe;;AAQnC,MAAMC,SAAS,GAAGtB,WAAW,CAAC,UAAAuB,KAAK;AAAA,WAAIA,KAAK,CAACD,SAAV;AAAA,GAAN,CAA7B;;AARmC,qBASdtB,WAAW,CAAC,UAAAuB,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CATG;AAAA,MAS3BA,QAT2B,gBAS3BA,QAT2B;;AAUnC,MAAMC,KAAK,GAAGzB,WAAW,CAAC,UAAAuB,KAAK;AAAA,WAAIA,KAAK,CAACE,KAAV;AAAA,GAAN,CAAzB;;AAEA,WAASC,gBAAT,GAA4B;AAC1BjB,IAAAA,QAAQ,CAACX,UAAU,CAAC;AAAEY,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,IAAI,EAAJA,IAAR;AAAcE,MAAAA,OAAO,EAAPA,OAAd;AAAuBa,MAAAA,KAAK,EAAEX;AAA9B,KAAD,CAAX,CAAR;AACAL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAR,IAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AACAoB,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AACDtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIqB,WAAJ,EAAiB;AACf,UAAMU,SAAS,GAAGN,SAAS,CAACO,IAAV,CAAe;AAAA,YAAGC,SAAH,QAAGA,SAAH;AAAA,eAAmBA,SAAS,KAAKlB,IAAjC;AAAA,OAAf,EACfe,KADH;AAEA,UAAMI,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,SAAS,IAAId,OAAO,GAAG,GAAd,CAApB,CAAf;AACAG,MAAAA,WAAW,CAACc,MAAD,CAAX;AACD;AACF,GAPQ,EAON,CAACT,SAAD,EAAYV,IAAZ,EAAkBE,OAAlB,EAA2BI,WAA3B,CAPM,CAAT;AASArB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMqC,SAAS,GAAG,CAAC,CAACV,QAAQ,CAACK,IAAT,CAClB,UAAAM,CAAC;AAAA,aAAIA,CAAC,CAACzB,IAAF,CAAO0B,WAAP,OAAyB1B,IAAI,CAAC0B,WAAL,EAA7B;AAAA,KADiB,CAApB;AAGAf,IAAAA,YAAY,CAAC,CAACa,SAAF,CAAZ;;AAEA,QAAIxB,IAAI,IAAIE,IAAR,IAAgBE,OAAhB,IAA2B,CAACoB,SAA5B,IAAyCtB,IAAI,KAAK,GAAlD,IAAyD,CAAC,CAACE,OAA/D,EAAwE;AACtEK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAXQ,EAWN,CAACT,IAAD,EAAOE,IAAP,EAAaE,OAAb,EAAsBU,QAAtB,CAXM,CAAT;AAaA,MAAIa,cAAc,GAAGf,SAAS,CAACgB,GAAV,CAAc;AAAA,QAAGR,SAAH,SAAGA,SAAH;AAAA,WAAoB;AACrDS,MAAAA,KAAK,EAAET,SAD8C;AAErDU,MAAAA,IAAI,EAAEV;AAF+C,KAApB;AAAA,GAAd,CAArB;AAKA,MAAMW,WAAW,GACfhB,KAAK,KAAK,KAAV,GAAkBT,QAAlB,GAA6BgB,IAAI,CAACC,KAAL,CAAWjB,QAAQ,GAAG,QAAtB,CAD/B;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,OAAO,EAAC,GAArB;AAAyB,IAAA,mBAAmB,EAAC,4BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,gBAAgB,EAAEI,WAAW,GAAG,QAAH,GAAc,KAJ7C;AAKE,IAAA,MAAM,EAAE;AAAEsB,MAAAA,WAAW,EAAEtB,WAAW,GAAG,OAAH,GAAa;AAAvC,KALV;AAME,IAAA,WAAW,EAAEA,WAAW,GAAG,OAAH,GAAa,SANvC;AAOE,IAAA,YAAY,EAAEV,IAPhB;AAQE,IAAA,QAAQ,EAAE,kBAAAiC,CAAC;AAAA,aAAIhC,OAAO,CAACgC,CAAC,CAACC,MAAF,CAASL,KAAV,CAAX;AAAA,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE3B,IADhB;AAEE,IAAA,WAAW,EAAEyB,cAFf;AAGE,IAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,aAAI9B,OAAO,CAAC8B,CAAC,CAACC,MAAF,CAASL,KAAV,CAAX;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAEzB,OADhB;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,QAAQ,EAAE,kBAAA6B,CAAC,EAAI;AACb5B,MAAAA,UAAU,CAAC8B,MAAM,CAACF,CAAC,CAACC,MAAF,CAASL,KAAV,CAAP,CAAV;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAuBE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,cAAc,EAAC,QAAtC;AAA+C,IAAA,UAAU,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,WAAW,IAAI,GAAtB,CADF,CAvBF,EA0BE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,cAAc,EAAC,QAAtC;AAA+C,IAAA,UAAU,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,WAAW,GACV,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEQ,gBAAf;AAAiC,IAAA,IAAI,EAAC,cAAtC;AAAqD,IAAA,IAAI,EAAC,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAGV,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjB,QAAQ,CAACV,cAAc,EAAf,CAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CA1BF,CADF;AA0CD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { addVariant, setActiveFalse } from \"features/variants/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"components/Select\";\nimport { Text, Flex, Grid, Input, Icon } from \"@chakra-ui/core\";\n\nexport default function NewVariant() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [main, setMain] = useState(\"SQ\");\n  const [percent, setPercent] = useState(80);\n  const [newOneRM, setNewOneRM] = useState(null);\n  const [fieldsValid, setValid] = useState(false);\n  const [isNameValid, setNameValid] = useState(true);\n  const oneRepMax = useSelector(state => state.oneRepMax);\n  const { variants } = useSelector(state => state.variants);\n  const units = useSelector(state => state.units);\n\n  function handleAddVariant() {\n    dispatch(addVariant({ name, main, percent, oneRM: newOneRM }));\n    setName(\"\");\n    setMain(\"\");\n    setPercent(\"\");\n    setNewOneRM(\"\");\n    dispatch(setActiveFalse());\n    setValid(false);\n  }\n  useEffect(() => {\n    if (fieldsValid) {\n      const mainOneRM = oneRepMax.find(({ shortName }) => shortName === main)\n        .oneRM;\n      const weight = Math.round(mainOneRM * (percent / 100));\n      setNewOneRM(weight);\n    }\n  }, [oneRepMax, main, percent, fieldsValid]);\n\n  useEffect(() => {\n    const nameExist = !!variants.find(\n      v => v.name.toLowerCase() === name.toLowerCase()\n    );\n    setNameValid(!nameExist);\n\n    if (name && main && percent && !nameExist && main !== \"-\" && !!percent) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [name, main, percent, variants]);\n\n  let liftNamesArray = oneRepMax.map(({ shortName }) => ({\n    value: shortName,\n    text: shortName\n  }));\n\n  const oneRMByUnit =\n    units === \"lbs\" ? newOneRM : Math.round(newOneRM * 0.453592);\n\n  return (\n    <Grid my=\"2\" gridGap=\"2\" gridTemplateColumns=\"1.25fr 1fr 1fr 0.8fr 0.5fr\">\n      <Input\n        color=\"gray.800\"\n        fontWeight=\"bold\"\n        textAlign=\"center\"\n        focusBorderColor={isNameValid ? \"yellow\" : \"red\"}\n        _hover={{ borderColor: isNameValid ? \"black\" : \"red.300\" }}\n        borderColor={isNameValid ? \"black\" : \"red.300\"}\n        defaultValue={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <Select\n        defaultValue={main}\n        customArray={liftNamesArray}\n        onChange={e => setMain(e.target.value)}\n      />\n      <Select\n        defaultValue={percent}\n        usePercentages\n        onChange={e => {\n          setPercent(Number(e.target.value));\n        }}\n      />\n      <Flex flexDir=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        <Text>{oneRMByUnit || \"-\"}</Text>\n      </Flex>\n      <Flex flexDir=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        <Flex align=\"center\">\n          {fieldsValid ? (\n            <Icon onClick={handleAddVariant} name=\"check-circle\" size=\"6\" />\n          ) : (\n            <Icon\n              name=\"small-close\"\n              size=\"6\"\n              onClick={() => dispatch(setActiveFalse())}\n            />\n          )}\n        </Flex>\n      </Flex>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}