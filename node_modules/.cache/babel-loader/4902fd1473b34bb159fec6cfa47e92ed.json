{"ast":null,"code":"var _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/Variants.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { setActiveTrue } from \"features/variants/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Text, Flex, Grid, Button } from \"@chakra-ui/core\";\nimport NewVariant from \"./NewVariant\";\nimport VariantRow from \"./VariantRow\";\nexport default function Variants() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.variants;\n  }),\n      isActive = _useSelector.isActive,\n      variants = _useSelector.variants; // console.log(\"variants\", variants);\n\n\n  return React.createElement(React.Fragment, null, React.createElement(Flex, {\n    mt: \"8\",\n    mb: \"4\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Text, {\n    mx: \"auto\",\n    fontWeight: \"black\",\n    fontSize: \"xs\",\n    textTransform: \"uppercase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"variants\")), React.createElement(Grid, {\n    fontSize: \"md\",\n    fontWeight: \"black\",\n    letterSpacing: \"wider\",\n    color: \"yellow.500\" // mb=\"2\"\n    ,\n    gridGap: \"2\",\n    gridTemplateColumns: \"1.25fr 1fr 1fr 0.8fr 0.5fr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"LIFT\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"MAIN\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"%\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"oneRM\"), React.createElement(Box, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), variants.map(function (props) {\n    return React.createElement(VariantRow, Object.assign({\n      key: props.id\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }), isActive && React.createElement(NewVariant, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Button, {\n    mt: \"1\",\n    h: \"12\",\n    variant: \"outline\",\n    variantColor: \"yellow\",\n    w: \"full\",\n    leftIcon: \"add\",\n    _hover: {\n      bg: \"yellow.500\",\n      color: \"gray.800\"\n    },\n    disabled: isActive,\n    onClick: function onClick() {\n      return dispatch(setActiveTrue());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add Variant\"));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/Variants.js"],"names":["React","useState","useEffect","setActiveTrue","useSelector","useDispatch","Box","Text","Flex","Grid","Button","NewVariant","VariantRow","Variants","dispatch","state","variants","isActive","map","props","id","bg","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,iBAA9C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADiC,qBAEFD,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CAFT;AAAA,MAEzBC,QAFyB,gBAEzBA,QAFyB;AAAA,MAEfD,QAFe,gBAEfA,QAFe,EAGjC;;;AACA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,KAAK,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,aAAa,EAAC,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAYE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAC,IADX;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,aAAa,EAAC,OAHhB;AAIE,IAAA,KAAK,EAAC,YAJR,CAKE;AALF;AAME,IAAA,OAAO,EAAC,GANV;AAOE,IAAA,mBAAmB,EAAC,4BAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,EAYE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,EAaE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAZF,EA2BGA,QAAQ,CAACE,GAAT,CAAa,UAAAC,KAAK,EAAI;AACrB,WAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAvB,OAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CA3BH,EA8BGF,QAAQ,IAAI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9Bf,EAgCE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,CAAC,EAAC,IAFJ;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,YAAY,EAAC,QAJf;AAKE,IAAA,CAAC,EAAC,MALJ;AAME,IAAA,QAAQ,EAAC,KANX;AAOE,IAAA,MAAM,EAAE;AAAEI,MAAAA,EAAE,EAAE,YAAN;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAPV;AAQE,IAAA,QAAQ,EAAEL,QARZ;AASE,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAACX,aAAa,EAAd,CAAd;AAAA,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhCF,CADF;AAgDD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { setActiveTrue } from \"features/variants/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Text, Flex, Grid, Button } from \"@chakra-ui/core\";\nimport NewVariant from \"./NewVariant\";\nimport VariantRow from \"./VariantRow\";\n\nexport default function Variants() {\n  const dispatch = useDispatch();\n  const { isActive, variants } = useSelector(state => state.variants);\n  // console.log(\"variants\", variants);\n  return (\n    <>\n      <Flex mt=\"8\" mb=\"4\" align=\"center\">\n        <Text\n          mx=\"auto\"\n          fontWeight=\"black\"\n          fontSize=\"xs\"\n          textTransform=\"uppercase\"\n        >\n          variants\n        </Text>\n      </Flex>\n\n      <Grid\n        fontSize=\"md\"\n        fontWeight=\"black\"\n        letterSpacing=\"wider\"\n        color=\"yellow.500\"\n        // mb=\"2\"\n        gridGap=\"2\"\n        gridTemplateColumns=\"1.25fr 1fr 1fr 0.8fr 0.5fr\"\n      >\n        <Text textAlign=\"center\">LIFT</Text>\n        <Text textAlign=\"center\">MAIN</Text>\n        <Text textAlign=\"center\">%</Text>\n        <Text textAlign=\"center\">oneRM</Text>\n        <Box textAlign=\"center\" />\n      </Grid>\n      {variants.map(props => {\n        return <VariantRow key={props.id} {...props} />;\n      })}\n      {isActive && <NewVariant />}\n\n      <Button\n        mt=\"1\"\n        h=\"12\"\n        variant=\"outline\"\n        variantColor=\"yellow\"\n        w=\"full\"\n        leftIcon=\"add\"\n        _hover={{ bg: \"yellow.500\", color: \"gray.800\" }}\n        disabled={isActive}\n        onClick={() => dispatch(setActiveTrue())}\n      >\n        Add Variant\n      </Button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}