{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { useEffect, useState } from \"react\";\nimport Box from \"../Box\";\nexport var useHasImageLoaded = function useHasImageLoaded(_ref) {\n  var src = _ref.src,\n      onLoad = _ref.onLoad,\n      onError = _ref.onError;\n\n  var _useState = useState(false),\n      hasLoaded = _useState[0],\n      setHasLoaded = _useState[1];\n\n  useEffect(function () {\n    var image = new Image();\n    image.src = src;\n\n    var removeEventListeners = function removeEventListeners() {\n      image.removeEventListener(\"load\", loadListener);\n      image.removeEventListener(\"error\", errorListener);\n    };\n\n    var loadListener = function loadListener() {\n      removeEventListeners();\n      setHasLoaded(true);\n      onLoad && onLoad();\n    };\n\n    var errorListener = function errorListener(err) {\n      removeEventListeners();\n      setHasLoaded(false);\n      onError && onError(err);\n    };\n\n    image.addEventListener(\"load\", loadListener);\n    image.addEventListener(\"error\", errorListener);\n    return function () {\n      if (hasLoaded) {\n        return;\n      }\n\n      image.src = \"\";\n    };\n  }, [hasLoaded, src, onLoad, onError]);\n  return hasLoaded;\n};\n\nvar Img = function Img(_ref2) {\n  var src = _ref2.src,\n      onLoad = _ref2.onLoad,\n      onError = _ref2.onError,\n      fallbackSrc = _ref2.fallbackSrc,\n      alt = _ref2.alt,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"src\", \"onLoad\", \"onError\", \"fallbackSrc\", \"alt\"]);\n\n  var hasLoaded = useHasImageLoaded({\n    src: src,\n    onLoad: onLoad,\n    onError: onError\n  });\n  return jsx(Box, _extends({\n    as: \"img\",\n    src: hasLoaded ? src : fallbackSrc\n  }, props));\n};\n\nexport default Img;","map":null,"metadata":{},"sourceType":"module"}