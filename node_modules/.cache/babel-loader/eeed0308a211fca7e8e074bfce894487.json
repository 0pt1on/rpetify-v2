{"ast":null,"code":"var _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeToKg, changeToLbs } from 'features/weight-units/slice';\nimport { Box, Text, Flex, Grid, Switch, Link } from '@chakra-ui/core';\nimport OneRMRow from './OneRMRow';\nimport Variants from './Variants';\nexport default function SettingsContent() {\n  var oneRepMax = useSelector(function (state) {\n    return state.oneRepMax;\n  });\n  return React.createElement(Box, {\n    width: \"full\",\n    fontWeight: \"bold\",\n    color: \"gray.300\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(SettingsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(OneRMHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), oneRepMax.map(function (props) {\n    return React.createElement(OneRMRow, Object.assign({\n      key: props.id\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }), React.createElement(Variants, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(SettingsFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n}\n\nfunction SettingsHeader() {\n  var dispatch = useDispatch();\n  var units = useSelector(function (state) {\n    return state.units;\n  });\n  return React.createElement(Box, {\n    mb: \"4\",\n    mt: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    mx: \"auto\",\n    align: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xs\",\n    fontWeight: \"black\",\n    textTransform: \"uppercase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"estimated one rep max\"), React.createElement(Text, {\n    mx: \"2\",\n    fontSize: \"xs\",\n    fontWeight: \"black\",\n    textTransform: \"uppercase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"(\", units, \")\"), React.createElement(Switch, {\n    isChecked: units === 'lbs' ? true : false,\n    color: \"yellow\",\n    onChange: function onChange() {\n      units === 'lbs' ? dispatch(changeToKg()) : dispatch(changeToLbs());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nfunction OneRMHeader() {\n  return React.createElement(Grid, {\n    fontWeight: \"black\",\n    letterSpacing: \"wider\",\n    color: \"yellow.500\",\n    gap: 2,\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"LIFT\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"WEIGHT\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"REPS\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"RPE\"), React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"oneRM\"));\n}\n\nfunction SettingsFooter() {\n  return React.createElement(Box, {\n    mt: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Box, {\n    fontWeight: \"normal\",\n    fontSize: \"xs\",\n    color: \"gray.300\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Text, {\n    mx: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"`The reps, rpe and one rep max is saved to the phone's local storage. Since the app is improving and might break with new updates - make sure you take a screenshot of your settings (one rep max) as the backup.`\"), React.createElement(Text, {\n    mx: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"If you find any bugs or have feature request e.g. custom plates on the bar, custom warmup sets, etc. please send me an email at\", React.createElement(Link, {\n    color: \"yellow.500\",\n    ml: \"1\",\n    textDecoration: \"underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"karolis.stulgys@gmail.com\"))), React.createElement(Flex, {\n    mt: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Text, {\n    mx: \"auto\",\n    fontSize: \"xs\",\n    color: \"gray.300\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Box, {\n    as: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Made with\"), React.createElement(Box, {\n    h: \"4\",\n    mx: \"1\",\n    as: \"img\",\n    src: \"https://img.icons8.com/material/24/f6ad55/like--v1.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), ' ', React.createElement(Box, {\n    as: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"by\"), React.createElement(Link, {\n    color: \"yellow.500\",\n    ml: \"1\",\n    fontWeight: \"black\",\n    textDecoration: \"underline\",\n    href: \"https://imkarolis.com/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"imkarolis\")))));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","changeToKg","changeToLbs","Box","Text","Flex","Grid","Switch","Link","OneRMRow","Variants","SettingsContent","oneRepMax","state","map","props","id","SettingsHeader","dispatch","units","OneRMHeader","SettingsFooter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changeToKg, changeToLbs } from 'features/weight-units/slice'\nimport { Box, Text, Flex, Grid, Switch, Link } from '@chakra-ui/core'\nimport OneRMRow from './OneRMRow'\nimport Variants from './Variants'\n\nexport default function SettingsContent() {\n  const oneRepMax = useSelector(state => state.oneRepMax)\n  return (\n    <Box width=\"full\" fontWeight=\"bold\" color=\"gray.300\">\n      <SettingsHeader />\n      <OneRMHeader />\n      {oneRepMax.map(props => {\n        return <OneRMRow key={props.id} {...props} />\n      })}\n      <Variants />\n      <SettingsFooter />\n    </Box>\n  )\n}\n\nfunction SettingsHeader() {\n  const dispatch = useDispatch()\n  const units = useSelector(state => state.units)\n\n  return (\n    <Box mb=\"4\" mt=\"1\">\n      <Flex mx=\"auto\" align=\"center\" justify=\"center\">\n        <Text fontSize=\"xs\" fontWeight=\"black\" textTransform=\"uppercase\">\n          estimated one rep max\n        </Text>\n        <Text mx=\"2\" fontSize=\"xs\" fontWeight=\"black\" textTransform=\"uppercase\">\n          ({units})\n        </Text>\n        <Switch\n          isChecked={units === 'lbs' ? true : false}\n          color=\"yellow\"\n          onChange={() => {\n            units === 'lbs' ? dispatch(changeToKg()) : dispatch(changeToLbs())\n          }}\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nfunction OneRMHeader() {\n  return (\n    <Grid\n      fontWeight=\"black\"\n      letterSpacing=\"wider\"\n      color=\"yellow.500\"\n      gap={2}\n      gridTemplateColumns=\"1fr 1fr 1fr 1fr 1fr\"\n    >\n      <Text textAlign=\"center\">LIFT</Text>\n      <Text textAlign=\"center\">WEIGHT</Text>\n      <Text textAlign=\"center\">REPS</Text>\n      <Text textAlign=\"center\">RPE</Text>\n      <Text textAlign=\"center\">oneRM</Text>\n    </Grid>\n  )\n}\n\nfunction SettingsFooter() {\n  return (\n    <Box mt=\"6\">\n      <Box\n        fontWeight=\"normal\"\n        fontSize=\"xs\"\n        color=\"gray.300\"\n        textAlign=\"center\"\n      >\n        <Text mx=\"auto\">\n          `The reps, rpe and one rep max is saved to the phone's local storage.\n          Since the app is improving and might break with new updates - make\n          sure you take a screenshot of your settings (one rep max) as the\n          backup.`\n        </Text>\n        <Text mx=\"auto\">\n          If you find any bugs or have feature request e.g. custom plates on the\n          bar, custom warmup sets, etc. please send me an email at\n          <Link color=\"yellow.500\" ml=\"1\" textDecoration=\"underline\">\n            karolis.stulgys@gmail.com\n          </Link>\n        </Text>\n      </Box>\n      <Flex mt=\"6\">\n        <Text mx=\"auto\" fontSize=\"xs\" color=\"gray.300\">\n          <Flex align=\"center\">\n            <Box as=\"span\">Made with</Box>\n            <Box\n              h=\"4\"\n              mx=\"1\"\n              as=\"img\"\n              src=\"https://img.icons8.com/material/24/f6ad55/like--v1.png\"\n            />{' '}\n            <Box as=\"span\">by</Box>\n            <Link\n              color=\"yellow.500\"\n              ml=\"1\"\n              fontWeight=\"black\"\n              textDecoration=\"underline\"\n              href=\"https://imkarolis.com/\"\n              target=\"_blank\"\n            >\n              imkarolis\n            </Link>\n          </Flex>\n        </Text>\n      </Flex>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}