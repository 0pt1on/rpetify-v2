{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React, { createContext } from \"react\";\nimport Component from \"@reach/component-component\";\nimport { DialogOverlay, DialogContent } from \"@reach/dialog\";\nimport { useId } from \"@reach/auto-id\";\nimport invariant from \"invariant\";\nimport { func, bool, node, object, oneOfType } from \"prop-types\";\nvar AlertDialogContext = createContext();\n\nfunction AlertDialogOverlay(_ref) {\n  var leastDestructiveRef = _ref.leastDestructiveRef,\n      props = _objectWithoutProperties(_ref, [\"leastDestructiveRef\"]);\n\n  var labelId = useId();\n  var descriptionId = useId();\n  return React.createElement(Component, {\n    getRefs: function getRefs() {\n      return {\n        labelId: \"alert-dialog-\" + labelId,\n        descriptionId: \"alert-dialog-\" + descriptionId,\n        leastDestructiveRef: leastDestructiveRef\n      };\n    }\n  }, function (_ref2) {\n    var refs = _ref2.refs;\n    return React.createElement(AlertDialogContext.Provider, {\n      value: refs\n    }, React.createElement(DialogOverlay, _extends({\n      \"data-reach-alert-dialog-overlay\": true,\n      initialFocusRef: leastDestructiveRef\n    }, props)));\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? AlertDialogOverlay.propTypes = {\n  isOpen: bool,\n  onDismiss: func,\n  leastDestructiveRef: oneOfType([func, object]),\n  children: node\n} : void 0;\n\nvar AlertDialogContent = function AlertDialogContent(_ref3) {\n  var children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"children\"]);\n\n  return React.createElement(AlertDialogContext.Consumer, null, function (refs) {\n    return React.createElement(DialogContent, _extends({\n      \"data-reach-alert-dialong-content\": true,\n      role: \"alertdialog\",\n      \"aria-labelledby\": refs.labelId\n    }, props), React.createElement(Component, {\n      didMount: function didMount() {\n        !document.getElementById(refs.labelId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"@reach/alert-dialog: You must render a `<AlertDialogLabel>`\\n              inside an `<AlertDialog/>`.\") : invariant(false) : void 0;\n        !refs.leastDestructiveRef ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"@reach/alert-dialog: You must provide a `leastDestructiveRef` to\\n              `<AlertDialog>` or `<AlertDialogOverlay/>`. Please see\\n              https://ui.reach.tech/alert-dialog/#alertdialogoverlay-leastdestructiveref\") : invariant(false) : void 0;\n      },\n      children: children\n    }));\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? AlertDialogContent.propTypes = {\n  children: node\n} : void 0;\n\nvar AlertDialogLabel = function AlertDialogLabel(props) {\n  return React.createElement(AlertDialogContext.Consumer, null, function (_ref4) {\n    var labelId = _ref4.labelId;\n    return React.createElement(\"div\", _extends({\n      id: labelId,\n      \"data-reach-alert-dialog-label\": true\n    }, props));\n  });\n};\n\nvar AlertDialogDescription = function AlertDialogDescription(props) {\n  return React.createElement(AlertDialogContext.Consumer, null, function (_ref5) {\n    var descriptionId = _ref5.descriptionId;\n    return React.createElement(\"div\", _extends({\n      id: descriptionId,\n      \"data-reach-alert-dialog-description\": true\n    }, props));\n  });\n};\n\nvar AlertDialog = function AlertDialog(_ref6) {\n  var isOpen = _ref6.isOpen,\n      onDismiss = _ref6.onDismiss,\n      leastDestructiveRef = _ref6.leastDestructiveRef,\n      props = _objectWithoutProperties(_ref6, [\"isOpen\", \"onDismiss\", \"leastDestructiveRef\"]);\n\n  return React.createElement(AlertDialogOverlay, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    leastDestructiveRef: leastDestructiveRef\n  }, React.createElement(AlertDialogContent, props));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? AlertDialog.propTypes = {\n  isOpen: bool,\n  onDismiss: func,\n  leastDestructiveRef: func,\n  children: node\n} : void 0;\nexport { AlertDialog, AlertDialogLabel, AlertDialogDescription, AlertDialogOverlay, AlertDialogContent };","map":null,"metadata":{},"sourceType":"module"}