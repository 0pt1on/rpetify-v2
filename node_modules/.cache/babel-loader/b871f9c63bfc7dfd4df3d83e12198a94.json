{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { ModalTransition, ModalOverlay, ModalContent } from \"./components\";\n\nvar Modal = function Modal(_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      children = _ref.children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"md\" : _ref$size,\n      isCentered = _ref.isCentered,\n      zIndex = _ref.zIndex,\n      overlayBg = _ref.overlayBg,\n      initialFocusRef = _ref.initialFocusRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"isOpen\", \"onClose\", \"children\", \"size\", \"isCentered\", \"zIndex\", \"overlayBg\", \"initialFocusRef\"]);\n\n  var centeredStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n  return jsx(ModalTransition, {\n    isOpen: isOpen\n  }, function (styles) {\n    return jsx(ModalOverlay, {\n      initialFocusRef: initialFocusRef,\n      opacity: styles.opacity,\n      bg: overlayBg,\n      zIndex: zIndex,\n      css: isCentered && centeredStyle,\n      onDismiss: onClose\n    }, jsx(ModalContent, _extends({\n      maxWidth: size,\n      rounded: \"md\",\n      transform: \"translate3d(0px, \" + styles.y + \"px, 0px)\"\n    }, !isCentered && {\n      top: 40,\n      mx: \"auto\"\n    }, rest), children));\n  });\n};\n\nexport default Modal;\nexport * from \"./components\";","map":null,"metadata":{},"sourceType":"module"}