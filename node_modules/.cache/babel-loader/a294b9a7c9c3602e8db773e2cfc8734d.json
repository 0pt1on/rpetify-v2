{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { DialogContent, DialogOverlay } from \"@reach/dialog\";\nimport { forwardRef } from \"react\";\nimport { Transition } from \"react-spring/renderprops.cjs\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport Box from \"../Box\";\nimport Flex from \"../Flex\";\nimport styled from \"@emotion/styled-base\";\nimport { systemProps } from \"../Box\";\nimport extraConfig from \"../Box/config\";\n\nvar ModalHeader = function ModalHeader(props) {\n  return jsx(Box, _extends({\n    px: 6,\n    py: 4,\n    as: \"header\",\n    position: \"relative\",\n    fontSize: \"xl\",\n    fontWeight: \"semibold\"\n  }, props));\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  return jsx(Flex, _extends({\n    px: 6,\n    py: 4,\n    as: \"footer\",\n    justifyContent: \"flex-end\"\n  }, props));\n};\n\nvar ModalBody = function ModalBody(props) {\n  return jsx(Box, _extends({\n    px: 6,\n    py: 2,\n    flex: \"1\"\n  }, props));\n};\n\nvar StyledDialogOverlay = styled(DialogOverlay)(systemProps, extraConfig);\nvar ModalOverlay = forwardRef(function (_ref, ref) {\n  var _ref$bg = _ref.bg,\n      bg = _ref$bg === void 0 ? \"rgba(16,22,26,0.7)\" : _ref$bg,\n      zIndex = _ref.zIndex,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bg\", \"zIndex\"]);\n\n  return jsx(StyledDialogOverlay, _extends({\n    ref: ref,\n    position: \"fixed\",\n    zIndex: zIndex,\n    bottom: \"0\",\n    top: \"0\",\n    left: \"0\",\n    right: \"0\",\n    overflowY: \"auto\",\n    bg: bg\n  }, props));\n});\nexport var modalContentStyle = function modalContentStyle(_ref2) {\n  var colorMode = _ref2.colorMode;\n  var style = {\n    light: {\n      bg: \"#fff\",\n      color: \"inherit\",\n      boxShadow: \"0 7px 14px 0 rgba(0,0,0, 0.1), 0 3px 6px 0 rgba(0, 0, 0, .07)\"\n    },\n    dark: {\n      bg: \"gray.700\",\n      boxShadow: \"rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px\"\n    }\n  };\n  return style[colorMode];\n};\nvar ModalContent = forwardRef(function (props, ref) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var theme = useTheme();\n  var styleProps = modalContentStyle({\n    colorMode: colorMode,\n    theme: theme\n  });\n  return jsx(Box, _extends({\n    as: DialogContent,\n    width: \"100%\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ref: ref\n  }, styleProps, props));\n});\n\nvar ModalTransition = function ModalTransition(_ref3) {\n  var isOpen = _ref3.isOpen,\n      _ref3$duration = _ref3.duration,\n      duration = _ref3$duration === void 0 ? 150 : _ref3$duration,\n      children = _ref3.children;\n  return jsx(Transition, {\n    items: isOpen,\n    from: {\n      opacity: 0,\n      y: 10\n    },\n    enter: {\n      opacity: 1,\n      y: 0\n    },\n    leave: {\n      opacity: 0,\n      y: -10\n    },\n    config: {\n      duration: duration\n    }\n  }, function (isOpen) {\n    return isOpen && function (styles) {\n      return children(styles);\n    };\n  });\n};\n\nexport { ModalHeader, ModalTransition, ModalFooter, ModalBody, ModalOverlay, ModalContent };","map":null,"metadata":{},"sourceType":"module"}