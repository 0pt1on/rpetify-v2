{"ast":null,"code":"import _defineProperty from \"/Users/karolis/imkarolis/rpetify-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from \"redux-starter-kit\";\nimport uuid from \"uuid/v4\";\nvar workoutsSlice = createSlice({\n  slice: \"workouts\",\n  initialState: [_objectSpread({}, getNewLift())],\n  reducers: {\n    addWorkout: function addWorkout(state, action) {\n      state.push(_objectSpread({}, getNewLift()));\n    },\n    removeWorkout: function removeWorkout(state, action) {\n      return state.filter(function (w) {\n        return w.id !== action.payload.id;\n      });\n    },\n    addSet: function addSet(state, action) {\n      var workout = state.find(function (w) {\n        return w.id === action.payload.id;\n      });\n      workout.sets.push(_objectSpread({}, getNewSet()));\n    },\n    removeSet: function removeSet(state, action) {\n      var _action$payload = action.payload,\n          workoutId = _action$payload.workoutId,\n          setIdx = _action$payload.setIdx;\n      var workout = state.find(function (w) {\n        return w.id === workoutId;\n      });\n      workout.sets.splice(setIdx, 1);\n    },\n    changeSet: function changeSet(state, action) {\n      var _action$payload2 = action.payload,\n          workoutId = _action$payload2.workoutId,\n          setId = _action$payload2.setId,\n          name = _action$payload2.name,\n          value = _action$payload2.value;\n      var workout = state.find(function (w) {\n        return w.id === workoutId;\n      });\n      var set = workout.sets.find(function (s) {\n        return s.id === setId;\n      });\n      set[name] = Number(value);\n    },\n    changeWorkoutName: function changeWorkoutName(state, action) {\n      var _action$payload3 = action.payload,\n          workoutId = _action$payload3.workoutId,\n          value = _action$payload3.value;\n      var workout = state.find(function (w) {\n        return w.id === workoutId;\n      });\n      workout.name = value;\n    },\n    removeWorkoutByName: function removeWorkoutByName(state, action) {\n      return state.filter(function (w) {\n        return w.name !== action.payload.name;\n      });\n    }\n  }\n});\nvar _workoutsSlice$action = workoutsSlice.actions,\n    addWorkout = _workoutsSlice$action.addWorkout,\n    removeWorkout = _workoutsSlice$action.removeWorkout,\n    addSet = _workoutsSlice$action.addSet,\n    removeSet = _workoutsSlice$action.removeSet,\n    changeSet = _workoutsSlice$action.changeSet,\n    changeWorkoutName = _workoutsSlice$action.changeWorkoutName,\n    removeWorkoutByName = _workoutsSlice$action.removeWorkoutByName;\nexport { addWorkout, removeWorkout, addSet, removeSet, changeSet, changeWorkoutName, removeWorkoutByName };\nexport default workoutsSlice.reducer;\n\nfunction getNewSet() {\n  return {\n    id: uuid(),\n    reps: 6,\n    rpe: 8,\n    sets: 3\n  };\n}\n\nfunction getNewLift() {\n  return {\n    id: uuid(),\n    name: \"Squat\",\n    sets: [{\n      id: uuid(),\n      reps: 6,\n      rpe: 6.5,\n      sets: 3\n    } // {\n    //   id: uuid(),\n    //   reps: 6,\n    //   rpe: 7,\n    //   sets: 1\n    // },\n    // {\n    //   id: uuid(),\n    //   reps: 6,\n    //   rpe: 8,\n    //   sets: 3\n    // }\n    ]\n  };\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/features/workouts/slice.js"],"names":["createSlice","uuid","workoutsSlice","slice","initialState","getNewLift","reducers","addWorkout","state","action","push","removeWorkout","filter","w","id","payload","addSet","workout","find","sets","getNewSet","removeSet","workoutId","setIdx","splice","changeSet","setId","name","value","set","s","Number","changeWorkoutName","removeWorkoutByName","actions","reducer","reps","rpe"],"mappings":"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","sourcesContent":["import { createSlice } from \"redux-starter-kit\";\nimport uuid from \"uuid/v4\";\n\nconst workoutsSlice = createSlice({\n  slice: \"workouts\",\n  initialState: [{ ...getNewLift() }],\n  reducers: {\n    addWorkout(state, action) {\n      state.push({ ...getNewLift() });\n    },\n    removeWorkout(state, action) {\n      return state.filter(w => w.id !== action.payload.id);\n    },\n    addSet(state, action) {\n      const workout = state.find(w => w.id === action.payload.id);\n      workout.sets.push({ ...getNewSet() });\n    },\n    removeSet(state, action) {\n      const { workoutId, setIdx } = action.payload;\n      const workout = state.find(w => w.id === workoutId);\n      workout.sets.splice(setIdx, 1);\n    },\n    changeSet(state, action) {\n      const { workoutId, setId, name, value } = action.payload;\n      const workout = state.find(w => w.id === workoutId);\n      const set = workout.sets.find(s => s.id === setId);\n      set[name] = Number(value);\n    },\n    changeWorkoutName(state, action) {\n      const { workoutId, value } = action.payload;\n      const workout = state.find(w => w.id === workoutId);\n      workout.name = value;\n    },\n    removeWorkoutByName(state, action){\n      return state.filter(w => w.name !== action.payload.name);\n    }\n  }\n});\n\nexport const {\n  addWorkout,\n  removeWorkout,\n  addSet,\n  removeSet,\n  changeSet,\n  changeWorkoutName,\n  removeWorkoutByName\n} = workoutsSlice.actions;\nexport default workoutsSlice.reducer;\n\nfunction getNewSet() {\n  return {\n    id: uuid(),\n    reps: 6,\n    rpe: 8,\n    sets: 3\n  };\n}\n\nfunction getNewLift() {\n  return {\n    id: uuid(),\n    name: \"Squat\",\n    sets: [\n      {\n        id: uuid(),\n        reps: 6,\n        rpe: 6.5,\n        sets: 3\n      }\n      // {\n      //   id: uuid(),\n      //   reps: 6,\n      //   rpe: 7,\n      //   sets: 1\n      // },\n      // {\n      //   id: uuid(),\n      //   reps: 6,\n      //   rpe: 8,\n      //   sets: 3\n      // }\n    ]\n  };\n}\n"]},"metadata":{},"sourceType":"module"}