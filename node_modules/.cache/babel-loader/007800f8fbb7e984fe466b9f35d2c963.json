{"ast":null,"code":"var _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/OneRMRow.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { changeOneRepMax } from \"features/one-rep-max/slice\";\nimport Select from \"components/Select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRoundedWeight, getOneRepMax, getRoundedWeightKg, getKgWithDecimal, getOneRMByUnit } from \"utils\";\nimport { Grid, Text, Flex } from \"@chakra-ui/core\";\nexport default function OneRMRow(props) {\n  var name = props.name,\n      id = props.id,\n      rpe = props.rpe,\n      reps = props.reps,\n      shortName = props.shortName,\n      weight = props.weight,\n      oneRM = props.oneRM;\n  var units = useSelector(function (state) {\n    return state.units;\n  });\n  var dispatch = useDispatch();\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    dispatch(changeOneRepMax({\n      id: id,\n      name: name,\n      value: Number(value)\n    }));\n  };\n\n  useEffect(function () {\n    var value = getOneRepMax({\n      rpe: rpe,\n      reps: reps,\n      weight: weight\n    });\n    dispatch(changeOneRepMax({\n      id: id,\n      name: \"oneRM\",\n      value: Number(value)\n    }));\n  }, [id, rpe, reps, weight, dispatch]);\n\n  var getDefaultWeight = function getDefaultWeight() {\n    return units === \"lbs\" ? getRoundedWeight(weight) : getRoundedWeightKg(weight);\n  };\n\n  return React.createElement(Grid, {\n    my: \"2\",\n    gridGap: \"2\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, shortName)), React.createElement(Select, {\n    name: \"weight\" // defaultValue={defaultWeight}\n    ,\n    selected: getDefaultWeight(),\n    onChange: handleChange,\n    useWeights: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Select, {\n    name: \"reps\",\n    onChange: handleChange,\n    defaultValue: reps,\n    useReps: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Select, {\n    name: \"rpe\",\n    onChange: handleChange,\n    defaultValue: rpe,\n    useRpe: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, getOneRMByUnit(units, oneRM))));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/settings-content/OneRMRow.js"],"names":["React","useState","useEffect","changeOneRepMax","Select","useSelector","useDispatch","getRoundedWeight","getOneRepMax","getRoundedWeightKg","getKgWithDecimal","getOneRMByUnit","Grid","Text","Flex","OneRMRow","props","name","id","rpe","reps","shortName","weight","oneRM","units","state","dispatch","handleChange","e","target","value","Number","getDefaultWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { changeOneRepMax } from \"features/one-rep-max/slice\";\nimport Select from \"components/Select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getRoundedWeight,\n  getOneRepMax,\n  getRoundedWeightKg,\n  getKgWithDecimal,\n  getOneRMByUnit\n} from \"utils\";\nimport { Grid, Text, Flex } from \"@chakra-ui/core\";\n\nexport default function OneRMRow(props) {\n  const { name, id, rpe, reps, shortName, weight, oneRM } = props;\n  const units = useSelector(state => state.units);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    dispatch(changeOneRepMax({ id, name, value: Number(value) }));\n  };\n\n  useEffect(() => {\n    const value = getOneRepMax({ rpe, reps, weight });\n    dispatch(changeOneRepMax({ id, name: \"oneRM\", value: Number(value) }));\n  }, [id, rpe, reps, weight, dispatch]);\n\n  const getDefaultWeight = () => {\n    return units === \"lbs\"\n      ? getRoundedWeight(weight)\n      : getRoundedWeightKg(weight);\n  };\n\n  return (\n    <Grid my=\"2\" gridGap=\"2\" gridTemplateColumns=\"1fr 1fr 1fr 1fr 1fr\">\n      <Flex align=\"center\" justify=\"center\">\n        <Text textAlign=\"center\">{shortName}</Text>\n      </Flex>\n      <Select\n        name=\"weight\"\n        // defaultValue={defaultWeight}\n        selected={getDefaultWeight()}\n        onChange={handleChange}\n        useWeights\n      />\n      <Select name=\"reps\" onChange={handleChange} defaultValue={reps} useReps />\n      <Select name=\"rpe\" onChange={handleChange} defaultValue={rpe} useRpe />\n      <Flex align=\"center\" justify=\"center\">\n        <Text textAlign=\"center\">{getOneRMByUnit(units, oneRM)}</Text>\n      </Flex>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}