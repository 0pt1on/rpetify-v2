{"ast":null,"code":"import _toConsumableArray from \"/Users/karolis/imkarolis/rpetify-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/karolis/imkarolis/rpetify-v2/src/components/workout-card/index.js\";\nimport React from \"react\";\nimport { removeWorkout, addSet, changeWorkoutName } from \"features/workouts/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"components/Select\";\nimport Modal from \"components/Modal\";\nimport { Box, Text, Flex, Stack, IconButton } from \"@chakra-ui/core\";\nimport SetRow from \"./SetRow\";\nimport WarmupContent from \"./WarmupContent\";\nimport WorkContent from \"./WorkContent\";\nexport default function WorkoutCard(_ref) {\n  var workoutId = _ref.id,\n      sets = _ref.sets,\n      liftName = _ref.name;\n  return React.createElement(Stack, {\n    w: \"full\",\n    maxW: [\"md\"],\n    rounded: \"lg\",\n    shadow: \"lg\",\n    p: \"5\",\n    my: \"1\",\n    mb: \"3\",\n    fontSize: \"lg\",\n    fontWeight: \"bold\",\n    bg: \"gray.700\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(WorkoutHeader, {\n    workoutId: workoutId,\n    liftName: liftName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(WorkoutBody, {\n    sets: sets,\n    liftName: liftName,\n    workoutId: workoutId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(WorkoutFooter, {\n    liftName: liftName,\n    sets: sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nfunction WorkoutHeader(_ref2) {\n  var workoutId = _ref2.workoutId,\n      liftName = _ref2.liftName;\n  var dispatch = useDispatch();\n  var oneRepMax = useSelector(function (state) {\n    return state.oneRepMax;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.variants;\n  }),\n      variants = _useSelector.variants;\n\n  var mainLiftNames = function mainLiftNames() {\n    return oneRepMax.map(function (_ref3) {\n      var name = _ref3.name;\n      return {\n        value: name,\n        text: name\n      };\n    }).filter(Boolean);\n  };\n\n  var variantsNames = function variantsNames() {\n    return variants.map(function (_ref4) {\n      var name = _ref4.name;\n      return {\n        value: name,\n        text: name\n      };\n    }).filter(Boolean).filter(function (item) {\n      return item.value !== \"\";\n    });\n  };\n\n  var liftNames = [].concat(_toConsumableArray(mainLiftNames()), _toConsumableArray(variantsNames()));\n  return React.createElement(Flex, {\n    align: \"center\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    icon: \"close\",\n    size: \"md\",\n    bg: \"gray.200\",\n    onClick: function onClick() {\n      return dispatch(removeWorkout({\n        id: workoutId\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Box, {\n    w: \"50%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Select, {\n    customArray: liftNames,\n    defaultValue: liftName,\n    onChange: function onChange(e) {\n      return dispatch(changeWorkoutName({\n        workoutId: workoutId,\n        value: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    icon: \"add\",\n    size: \"md\",\n    bg: \"gray.200\",\n    onClick: function onClick() {\n      return dispatch(addSet({\n        id: workoutId\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\n\nfunction WorkoutBody(_ref5) {\n  var sets = _ref5.sets,\n      workoutId = _ref5.workoutId,\n      liftName = _ref5.liftName;\n  return React.createElement(Box, {\n    mt: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    mb: \"2\",\n    fontWeight: \"black\",\n    color: \"gray.300\",\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"REPS\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"RPE\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"SETS\")), sets.map(function (props, setIdx, arr) {\n    return liftName && React.createElement(SetRow, Object.assign({\n      key: props.id\n    }, props, {\n      workoutId: workoutId,\n      setIdx: setIdx,\n      arr: arr,\n      liftName: liftName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }));\n}\n\nfunction WorkoutFooter(_ref6) {\n  var liftName = _ref6.liftName,\n      sets = _ref6.sets;\n  return React.createElement(Flex, {\n    mt: \"3\",\n    fontWeight: \"black\",\n    color: \"yellow.500\",\n    justifyContent: \"space-evenly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    trigger: \"warmup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(WarmupContent, {\n    liftName: liftName,\n    sets: sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    trigger: \"work\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(WorkContent, {\n    liftName: liftName,\n    sets: sets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/karolis/imkarolis/rpetify-v2/src/components/workout-card/index.js"],"names":["React","removeWorkout","addSet","changeWorkoutName","useSelector","useDispatch","Select","Modal","Box","Text","Flex","Stack","IconButton","SetRow","WarmupContent","WorkContent","WorkoutCard","workoutId","id","sets","liftName","name","WorkoutHeader","dispatch","oneRepMax","state","variants","mainLiftNames","map","value","text","filter","Boolean","variantsNames","item","liftNames","e","target","WorkoutBody","props","setIdx","arr","WorkoutFooter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  removeWorkout,\n  addSet,\n  changeWorkoutName\n} from \"features/workouts/slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Select from \"components/Select\";\nimport Modal from \"components/Modal\";\nimport { Box, Text, Flex, Stack, IconButton } from \"@chakra-ui/core\";\nimport SetRow from \"./SetRow\";\nimport WarmupContent from \"./WarmupContent\";\nimport WorkContent from \"./WorkContent\";\n\nexport default function WorkoutCard({ id: workoutId, sets, name: liftName }) {\n  return (\n    <Stack\n      w=\"full\"\n      maxW={[\"md\"]}\n      rounded=\"lg\"\n      shadow=\"lg\"\n      p=\"5\"\n      my=\"1\"\n      mb=\"3\"\n      fontSize=\"lg\"\n      fontWeight=\"bold\"\n      bg=\"gray.700\"\n    >\n      <WorkoutHeader workoutId={workoutId} liftName={liftName} />\n      <WorkoutBody sets={sets} liftName={liftName} workoutId={workoutId} />\n      <WorkoutFooter liftName={liftName} sets={sets} />\n    </Stack>\n  );\n}\n\nfunction WorkoutHeader({ workoutId, liftName }) {\n  const dispatch = useDispatch();\n  const oneRepMax = useSelector(state => state.oneRepMax);\n  const { variants } = useSelector(state => state.variants);\n  \n  const mainLiftNames = () =>\n    oneRepMax.map(({ name }) => ({ value: name, text: name })).filter(Boolean);\n  const variantsNames = () =>\n    variants\n      .map(({ name }) => ({ value: name, text: name }))\n      .filter(Boolean)\n      .filter(item => item.value !== \"\");\n\n  const liftNames = [...mainLiftNames(), ...variantsNames()];\n\n\n  return (\n    <Flex align=\"center\" justify=\"space-between\">\n      <Box>\n        <IconButton\n          icon=\"close\"\n          size=\"md\"\n          bg=\"gray.200\"\n          onClick={() => dispatch(removeWorkout({ id: workoutId }))}\n        />\n      </Box>\n      <Box w=\"50%\">\n        <Select\n          customArray={liftNames}\n          defaultValue={liftName}\n          onChange={e =>\n            dispatch(changeWorkoutName({ workoutId, value: e.target.value }))\n          }\n        />\n      </Box>\n      <Box>\n        <IconButton\n          icon=\"add\"\n          size=\"md\"\n          bg=\"gray.200\"\n          onClick={() => dispatch(addSet({ id: workoutId }))}\n        />\n      </Box>\n    </Flex>\n  );\n}\n\nfunction WorkoutBody({ sets, workoutId, liftName }) {\n  return (\n    <Box mt=\"6\">\n      <Flex mb=\"2\" fontWeight=\"black\" color=\"gray.300\" justify=\"space-around\">\n        <Text>REPS</Text>\n        <Text>RPE</Text>\n        <Text>SETS</Text>\n      </Flex>\n      {sets.map((props, setIdx, arr) => {\n        return (\n          liftName && (\n            <SetRow\n              key={props.id}\n              {...props}\n              workoutId={workoutId}\n              setIdx={setIdx}\n              arr={arr}\n              liftName={liftName}\n            />\n          )\n        );\n      })}\n    </Box>\n  );\n}\n\nfunction WorkoutFooter({ liftName, sets }) {\n  return (\n    <Flex\n      mt=\"3\"\n      fontWeight=\"black\"\n      color=\"yellow.500\"\n      justifyContent=\"space-evenly\"\n    >\n      <Modal trigger=\"warmup\">\n        <WarmupContent liftName={liftName} sets={sets} />\n      </Modal>\n      <Modal trigger=\"work\">\n        <WorkContent liftName={liftName} sets={sets} />\n      </Modal>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}