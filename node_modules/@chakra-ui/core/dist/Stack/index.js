"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _core = require("@emotion/core");

var _react = require("react");

var _Flex = _interopRequireDefault(require("../Flex"));

var _Box = _interopRequireDefault(require("../Box"));

/** @jsx jsx */
var Stack = function Stack(_ref) {
  var isInline = _ref.isInline,
      children = _ref.children,
      align = _ref.align,
      justify = _ref.justify,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,
      shouldWrapChildren = _ref.shouldWrapChildren,
      rest = (0, _objectWithoutPropertiesLoose2["default"])(_ref, ["isInline", "children", "align", "justify", "spacing", "shouldWrapChildren"]);
  return (0, _core.jsx)(_Flex["default"], (0, _extends2["default"])({
    align: align,
    justify: justify,
    flexDir: isInline ? "row" : "column"
  }, rest), _react.Children.map(children, function (child, index) {
    var isLastChild = children.length === index + 1;
    var spacingProps = isInline ? {
      mr: isLastChild ? null : spacing
    } : {
      mb: isLastChild ? null : spacing
    };

    if (shouldWrapChildren) {
      return (0, _core.jsx)(_Box["default"], (0, _extends2["default"])({
        d: "inline-block"
      }, spacingProps), child);
    }

    return (0, _react.cloneElement)(child, spacingProps);
  }));
};

var _default = Stack;
exports["default"] = _default;