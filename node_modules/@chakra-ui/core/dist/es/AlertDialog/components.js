import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/extends";

/** @jsx jsx */
import { jsx } from "@emotion/core";
import styled from "@emotion/styled";
import { AlertDialogContent as ReachAlertDialogContent, AlertDialogDescription, AlertDialogLabel, AlertDialogOverlay as ReachAlertDialogOverlay } from "@reach/alert-dialog";
import { forwardRef } from "react";
import Box, { systemProps } from "../Box";
import extraConfig from "../Box/config";
import { useColorMode } from "../ColorModeProvider";
import { modalContentStyle } from "../Modal";

var AlertDialogHeader = function AlertDialogHeader(props) {
  return jsx(Box, _extends({
    py: 4,
    px: 6,
    as: AlertDialogLabel
  }, props));
};

var AlertDialogBody = function AlertDialogBody(props) {
  return jsx(Box, _extends({
    px: 6,
    py: 2,
    as: AlertDialogDescription
  }, props));
};

var AlertDialogFooter = function AlertDialogFooter(props) {
  return jsx(Box, _extends({
    ml: "auto",
    p: 6
  }, props));
};

var StyledOverlay = styled(ReachAlertDialogOverlay)(systemProps, extraConfig);

var AlertDialogOverlay = function AlertDialogOverlay(_ref) {
  var _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? 5 : _ref$zIndex,
      _ref$bg = _ref.bg,
      bg = _ref$bg === void 0 ? "rgba(16,22,26,.7)" : _ref$bg,
      props = _objectWithoutPropertiesLoose(_ref, ["zIndex", "bg"]);

  return jsx(StyledOverlay, _extends({
    position: "fixed",
    zIndex: zIndex,
    bottom: "0",
    top: "0",
    left: "0",
    right: "0",
    overflowY: "auto",
    bg: bg
  }, props));
};

var AlertDialogContent = forwardRef(function (props, ref) {
  var _useColorMode = useColorMode(),
      colorMode = _useColorMode.colorMode;

  var styleProps = modalContentStyle({
    colorMode: colorMode
  });
  return jsx(Box, _extends({
    as: ReachAlertDialogContent,
    width: "100%",
    position: "relative",
    display: "flex",
    flexDirection: "column",
    ref: ref
  }, styleProps, props));
});
export { AlertDialogHeader, AlertDialogBody, AlertDialogFooter, AlertDialogOverlay, AlertDialogContent };